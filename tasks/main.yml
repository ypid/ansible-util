---
- name: Assert supported platform
  tags: util
  assert:
    that:
      - ansible_os_family in util_supported_os_families
      - ansible_distribution in util_supported_os_distributions


- name: Include OS specific vars
  tags: util
  include_vars: "{{ ansible_os_family }}.yml"

- name: Include distribution specific vars
  tags: util
  with_first_found:
    - "{{ ansible_distribution }}-{{ ansible_distribution_major_version }}.yml"
    - "{{ ansible_distribution }}.yml"
  include_vars: "{{ item }}"


- name: Assert role configuration
  tags: util
  assert:
    that:
      - util_package_state in util_package_states
      - util_init_system|default(util_init_system_default) in util_init_systems


# Manage package installation of Ansible dependencies
#   ansible_os_family == 'Debian'
- name: Update apt package cache
  tags: util
  become: true
  when: ansible_os_family == 'Debian'
  apt:
    update_cache=true
    cache_valid_time={{ util_apt_cache_valid_time }}

#   We need to install Python SELinux bindings to perform filesystem operations
#     with Ansible if SELinux is enabled
- name: Register SELinux state
  tags: util
  become: yes
  ignore_errors: true
  failed_when: false
  changed_when: false
  register: util_registered_selinux_state
  command: selinuxenabled

- name: Install Python SELinux bindings
  tags: util
  become: yes
  when: (util_registered_selinux_state.rc is defined and util_registered_selinux_state.rc == 0)
  with_items: util_package_list_selinux
  action: "{{ ansible_pkg_mgr }} state={{ util_package_state }} name={{ item }}"


#   ansible_os_family == 'RedHat'
- name: Install EPEL
  tags: util
  become: true
  when:
    - util_epel_enable
    - ansible_os_family == 'RedHat'
  register: util_registered_install_epel
  template:
    src=epel.repo.j2
    dest=/etc/yum.repos.d/epel.repo
    owner=0
    group=0
    mode=0644
    seuser=0

- name: Update yum package cache
  tags: util
  become: true
  when: util_registered_install_epel.changed
  command: yum
      --assumeyes
      --quiet
      --enablerepo epel
      makecache


- name: Install Ansible module dependencies
  tags: util
  become: true
  with_flattened:
    - util_package_list_ansible_deps
    - util_package_list_custom
  action: "{{ ansible_pkg_mgr }} state={{ util_package_state }} name={{ item }}"


# Manage persistency for downloading and distributing assets
# TODO [kraM] Make become configurable when v2 has arrived - Thu 21 May 2015 10:23:35 AM CEST
- name: Install local persistent data path
  tags: util
  local_action: file
    state=directory
    dest={{ util_persistent_data_path_local }}
    mode={{ util_persistent_data_path_local_mode|default(omit) }}
    owner={{ util_persistent_data_path_local_owner|default(omit) }}
    group={{ util_persistent_data_path_local_group|default(omit) }}
  when: util_persistent_data_path_local is string

# TODO [kraM] Make become configurable when v2 has arrived - Thu 21 May 2015 10:23:35 AM CEST
- name: Install remote persistent data path
  tags: util
  become: true
  file:
    state=directory
    dest={{ util_persistent_data_path_remote }}
    mode={{ util_persistent_data_path_remote_mode|default(2777) }}
    owner={{ util_persistent_data_path_remote_owner|default(0) }}
    group={{ util_persistent_data_path_remote_group|default(0) }}
  when: util_persistent_data_path_remote is string


# Add some facts for other roles to use
- name: Install Ansible facts.d directory
  tags: util
  become: yes
  file:
    state=directory
    dest=/etc/ansible/facts.d
    owner=0
    group=0
    mode=0755

- name: Install local util facts
  tags: util
  become: yes
  register: util_registered_install_local_util_facts
  template:
    src=facts.j2
    dest=/etc/ansible/facts.d/util.fact
    owner=0
    group=0
    mode=0644

- name: Re-read local facts
  tags: util
  when: util_registered_install_local_util_facts.changed
  setup:
    filter=ansible_local
